<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="CalculationTask" Id="{e4d382f1-2a0b-0e00-0784-d67a58737619}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CalculationTask EXTENDS TcoCore.TcoTask IMPLEMENTS iCalculationTask
VAR_IN_OUT
    InfoData         : InfoData;
    StatusOfSystem   : Status_of_System;
    CoordinatesTool1 : Coordinates;
    CoordinatesTool2 : Coordinates;
    CoordinatesTool3 : Coordinates;
END_VAR
VAR_INPUT
    ActionDesc : STRING(25);
END_VAR
VAR
    _data                    : ARRAY[1..31] OF DINT;
    _errorId                 : UDINT;
    _coeIndex                : UINT;
    _distanceFromX           : LREAL;
    _distanceFromY           : LREAL;
    _fieldOfView             : FieldOfView;
    _coordinatesInMillimeter : Coordinates;

    _resolutionX : UINT;
    _resolutionY : UINT;

    _states : (CalculatingCoefficientState
        , CalculatingFieldOfViewState
        , CalculatingDistanceState
        , CaulculatingCoordinatesInMillimeter
        , DoneState
        , ErrorState);

    //lineare Regression
    _offsetX      : LREAL;
    _gainX        : LREAL;
    _coefficientX : LREAL;

    _offsetY      : LREAL;
    _gainY        : LREAL;
    _coefficientY : LREAL;
END_VAR
//in mm     Breite			
//50		16,4		   22,4 
//100		31,2		   42,1 
//200		60,7		   81,4 
//300		90,2		   120,7
//400		119,7		   160,0
//500		149,2		   199,3
//600		178,7		   238,6
//700		208,3		   277,9
//800		237,8		   317,2
//900		267,3		   356,6
//1000		296,8	       395,9
//1250		370,6	       494,2
//1500		444,4	       592,4
//1750		518,2	       690,7
//2000		592		       789  
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF (THIS^.Execute()) THEN
    //ERror Case

    THIS^.ThrowWhen(StatusOfSystem.Error_Status);

    CASE _states OF
        CalculatingCoefficientState:
            _coefficientX := CalcCoefficientFromResolutionAndPixel
            (
                Resolution := _resolutionX
                , Pixel    := CoordinatesTool3.variableValue
            );

            _coefficientY := CalcCoefficientFromResolutionAndPixel
            (
                Resolution := _resolutionY
                , Pixel    := CoordinatesTool2.variableValue
            );

            _states := CalculatingFieldOfViewState;

        CalculatingFieldOfViewState:

            FieldOfView.xValue :=
                CalcFieldOfViewWithCoefficientAndObjectMeasurement
            (
                Coefficient := _coefficientX
                , Value     := THIS^.ControllerRef.ScoreToolWidth
            );

            FieldOfView.yValue :=
                CalcFieldOfViewWithCoefficientAndObjectMeasurement
            (
                Coefficient := _coefficientY
                , Value     := THIS^.ControllerRef.ScoreToolHeight
            );

            _states := CalculatingDistanceState;

        CalculatingDistanceState:

            _distanceFromX := (FieldOfView.xValue * _gainX) + _offsetX;
            _distanceFromY := (FieldOfView.yValue * _gainY) + _offsetY;
            _states        := CaulculatingCoordinatesInMillimeter;

        CaulculatingCoordinatesInMillimeter:
            _coordinatesInMillimeter.xValue :=
                LREAL_TO_DINT((FieldOfView.xValue / _resolutionX) * CoordinatesTool1.xValue);

            _coordinatesInMillimeter.yValue :=
                LREAL_TO_DINT((FieldOfView.yValue / _resolutiony) * CoordinatesTool1.yValue);

            _coordinatesInMillimeter.variableValue := CoordinatesTool1.variableValue;

            _states := DoneState;

        DoneState:

            THIS^.DoneWhen(TRUE);
        ErrorState:
            THIS^.ThrowWhen(TRUE);

    END_CASE
END_IF]]></ST>
    </Implementation>
    <Folder Name="Calculation" Id="{248b09cb-775e-01e2-2975-aea9950428ea}" />
    <Folder Name="Data" Id="{83fda28b-a834-0d9d-31c9-81c255f79258}" />
    <Folder Name="Status" Id="{9f76f991-0662-05f8-2564-dbcff28bbf17}" />
    <Folder Name="TcOpen" Id="{5bd3be72-46c1-0cb3-0855-b509c2aa875f}" />
    <Method Name="CalcCoefficientFromResolutionAndPixel" Id="{423b9b00-3656-0a31-2af3-7406fa9f4246}" FolderPath="Calculation\">
      <Declaration><![CDATA[METHOD PROTECTED CalcCoefficientFromResolutionAndPixel : LREAL
VAR_INPUT
    Resolution : LREAL;
    Pixel      : LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
IF Pixel = 0 THEN
    THIS^.Messenger.Error('Was ist los mit dir, teile nicht durch 0!');
    CalcCoefficientFromResolutionAndPixel := 0;
    RETURN;
END_IF

CalcCoefficientFromResolutionAndPixel := (Resolution / Pixel) * 10;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="CalcFieldOfViewWithCoefficientAndObjectMeasurement" Id="{1863b525-a4c9-0ed9-3ee1-98bfb75f2910}" FolderPath="Calculation\">
      <Declaration><![CDATA[METHOD PRIVATE CalcFieldOfViewWithCoefficientAndObjectMeasurement : LREAL
VAR_INPUT
    Coefficient : LREAL;
    Value       : DINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CalcFieldOfViewWithCoefficientAndObjectMeasurement := (Coefficient * DWORD_TO_LREAL(Value)) / 100;]]></ST>
      </Implementation>
    </Method>
    <Property Name="ControllerRef" Id="{f35729a5-2dd1-0cdc-3c68-16d871dfe3ca}">
      <Declaration><![CDATA[PROPERTY ControllerRef : REFERENCE TO IVController]]></Declaration>
      <Get Name="Get" Id="{4f09edc7-6f53-0e4d-269d-265d2b2c1d25}">
        <Declaration><![CDATA[VAR
    _controllerRef : POINTER TO IVController;
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF __QUERYPOINTER(_ParentObject, _controllerRef) THEN // Check if _Parent is Station001
    ControllerRef REF= _controllerRef^;               // If the check is successful dereference a pointer. simlar to THIS^ or SUPER^
END_IF]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="CoordinatesInMillimeter" Id="{dba460d6-1093-0ca3-078d-7f6c972bbd77}" FolderPath="Data\">
      <Declaration><![CDATA[PROPERTY CoordinatesInMillimeter : REFERENCE TO Coordinates]]></Declaration>
      <Get Name="Get" Id="{e2207b1b-61c4-0080-0666-9dbc1107310c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[CoordinatesInMillimeter Ref= _coordinatesInMillimeter;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="DistanceFromObject" Id="{f312561c-d7ae-0ae0-0fe2-4ddcc1ea4d0c}" FolderPath="Data\">
      <Declaration><![CDATA[PROPERTY DistanceFromObject : LREAL]]></Declaration>
      <Get Name="Get" Id="{e1411f34-b7b3-09ae-2b6f-38e2f5850ae2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF (_distanceFromX <> 0 AND _distanceFromY <> 0) THEN
    DistanceFromObject := (_distanceFromX + _distanceFromY) / 2;
ELSE
    DistanceFromObject := 0;
END_IF
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ErrorId" Id="{1d508d26-d6d8-08b2-2f2f-4c457b84fdd6}" FolderPath="Status\">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ErrorId : UINT]]></Declaration>
      <Get Name="Get" Id="{e48cf6ff-706d-0f29-18f9-89e1920e6904}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ErrorId := udint_to_uint(_errorId);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{873a52a0-6aca-0112-31d5-a9a916cfa53c}">
      <Declaration><![CDATA[METHOD PUBLIC FB_init : BOOL
VAR_INPUT
    bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
    bInCopyCode  : BOOL; // if TRUE, the instance afterwards gets moved into the copy code (online change)
    ParentObject : ITcoObject;
    ResolutionX  : UINT;
    ResolutionY  : UINT;
    OffsetX      : LREAL;
    GainX        : LREAL;
    OffsetY      : LREAL;
    GainY        : LREAL;

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// This is not clear to me... I from time to time the consumer code does not see 'FB_init' of 'TcoObject', that's why overridden here with super call...
{warning disable C0316}
SUPER^.FB_init(bInitRetains, bInCopyCode, ParentObject);

THIS^._resolutionX := ResolutionX;
THIS^._resolutionY := ResolutionY;

_offsetX := OffsetX;
_gainX   := GainX;
_offsetY := OffsetY;
_gainY   := GainY;]]></ST>
      </Implementation>
    </Method>
    <Property Name="FieldOfView" Id="{57b9f83f-34b0-0ea7-0663-04ccd42988ba}" FolderPath="Data\">
      <Declaration><![CDATA[PROPERTY FieldOfView : REFERENCE TO FieldOfView]]></Declaration>
      <Get Name="Get" Id="{208f3778-6745-0e75-38af-441f119323d0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[FieldOfView REF= _fieldOfView;
]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="OnDone" Id="{d9d70bf2-57a1-0f50-18d7-e64a3cc4465a}" FolderPath="TcOpen\">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Executes when task reaches the ```Done``` state .
        </summary>
    </docu>
~*)
METHOD PROTECTED OnDone
]]></Declaration>
      <Implementation>
        <ST><![CDATA[{warning disable C0371}
//this^.Restore(); ]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnError" Id="{1b2f2ec7-af0a-0bf8-388f-b0d450213da7}" FolderPath="TcOpen\">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Executes when task reaches the ```Error``` state.
            <para>
                Do not confuse with <see cref="PlcDocu.TcoCore.TcoTask.WhileError()"/>, that is called cyclically until '''Error''' state is left.
            </para>
        </summary>
    </docu>
~*)
METHOD PROTECTED OnError
]]></Declaration>
      <Implementation>
        <ST><![CDATA[{warning disable C0371} ]]></ST>
      </Implementation>
    </Method>
    <Method Name="OnStart" Id="{e7ce9761-a6b1-018f-2993-eb84164af652}" FolderPath="TcOpen\">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Executes ones when the task starts (at the moment of transition from the ```Requested``` state into the ```Busy``` state).
		</summary>			
	</docu>	
~*)
METHOD PROTECTED OnStart
]]></Declaration>
      <Implementation>
        <ST><![CDATA[{warning disable C0371}
_states := CalculatingCoefficientState;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Restore" Id="{68818741-ee72-0c26-3fac-52ca55d6aede}" FolderPath="TcOpen\">
      <Declaration><![CDATA[(*~
    <docu>
        <summary>
            Restores this instance to the Ready state. Can be called explicitly or from within one of the restore mechanisms.
            <para>
                See also <see cref="PlcDocu.TcoCore.TcoTask.AutoRestorable()"/>
            </para>
        </summary>
    </docu>
~*)
METHOD Restore : ITcoRestorable
]]></Declaration>
      <Implementation>
        <ST><![CDATA[{warning disable C0371}
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>